// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "oid", Type: field.TypeUUID, Unique: true},
		{Name: "age", Type: field.TypeInt},
		{Name: "owner", Type: field.TypeString},
		{Name: "balance", Type: field.TypeInt64},
		{Name: "currency", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "country_code", Type: field.TypeInt},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "account_owner",
				Unique:  true,
				Columns: []*schema.Column{AccountsColumns[2]},
			},
		},
	}
	// EntriesColumns holds the columns for the "entries" table.
	EntriesColumns = []*schema.Column{
		{Name: "oid", Type: field.TypeUUID},
		{Name: "amount", Type: field.TypeInt32},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "account_id", Type: field.TypeUUID},
	}
	// EntriesTable holds the schema information for the "entries" table.
	EntriesTable = &schema.Table{
		Name:       "entries",
		Columns:    EntriesColumns,
		PrimaryKey: []*schema.Column{EntriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "entries_accounts_entry",
				Columns:    []*schema.Column{EntriesColumns[3]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "entry_account_id",
				Unique:  false,
				Columns: []*schema.Column{EntriesColumns[3]},
			},
		},
	}
	// TransfersColumns holds the columns for the "transfers" table.
	TransfersColumns = []*schema.Column{
		{Name: "oid", Type: field.TypeUUID},
		{Name: "from_account_id", Type: field.TypeInt32, Unique: true},
		{Name: "to_account_id", Type: field.TypeInt32, Unique: true},
		{Name: "amount", Type: field.TypeInt32},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "account_transfer", Type: field.TypeUUID, Nullable: true},
	}
	// TransfersTable holds the schema information for the "transfers" table.
	TransfersTable = &schema.Table{
		Name:       "transfers",
		Columns:    TransfersColumns,
		PrimaryKey: []*schema.Column{TransfersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transfers_accounts_transfer",
				Columns:    []*schema.Column{TransfersColumns[5]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "transfer_from_account_id",
				Unique:  true,
				Columns: []*schema.Column{TransfersColumns[1]},
			},
			{
				Name:    "transfer_to_account_id",
				Unique:  true,
				Columns: []*schema.Column{TransfersColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		EntriesTable,
		TransfersTable,
	}
)

func init() {
	EntriesTable.ForeignKeys[0].RefTable = AccountsTable
	TransfersTable.ForeignKeys[0].RefTable = AccountsTable
}
