// Code generated by ent, DO NOT EDIT.

package transfer

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the transfer type in the database.
	Label = "transfer"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "oid"
	// FieldFromAccountID holds the string denoting the from_account_id field in the database.
	FieldFromAccountID = "from_account_id"
	// FieldToAccountID holds the string denoting the to_account_id field in the database.
	FieldToAccountID = "to_account_id"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// Table holds the table name of the transfer in the database.
	Table = "transfers"
)

// Columns holds all SQL columns for transfer fields.
var Columns = []string{
	FieldID,
	FieldFromAccountID,
	FieldToAccountID,
	FieldAmount,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "transfers"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"account_transfer",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the Transfer queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByFromAccountID orders the results by the from_account_id field.
func ByFromAccountID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFromAccountID, opts...).ToFunc()
}

// ByToAccountID orders the results by the to_account_id field.
func ByToAccountID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldToAccountID, opts...).ToFunc()
}

// ByAmount orders the results by the amount field.
func ByAmount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAmount, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}
